// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.

    DMux8Way(in= load, sel=address[0..2], a= l0 , b=l1 , c= l2, d= l3, e= l4, f=l5 , g=l6 , h=l7 );
    RAM8(in= in, load=l0 , address=address[3..5] , out= ram0);
    RAM8(in= in, load=l1 , address=address[3..5] , out= ram1);
    RAM8(in= in, load=l2 , address=address[3..5] , out= ram2);
    RAM8(in= in, load=l3 , address=address[3..5] , out= ram3);
    RAM8(in= in, load=l4 , address=address[3..5] , out= ram4);
    RAM8(in= in, load=l5 , address=address[3..5] , out= ram5);
    RAM8(in= in, load=l6 , address=address[3..5] , out= ram6);
    RAM8(in= in, load=l7 , address=address[3..5] , out= ram7);
    Mux8Way16(a=ram0 , b=ram1 , c=ram2 , d=ram3 , e=ram4 , f= ram5, g=ram6 , h= ram7, sel=address[0..2], out=out );


    
}