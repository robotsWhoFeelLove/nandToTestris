class Sprites {
	field Space space;
    function void drawUnselected(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 32767);
	do Memory.poke(memAddress +32, 16385);
	do Memory.poke(memAddress +64, 16385);
	do Memory.poke(memAddress +96, 16385);
	do Memory.poke(memAddress +128, 16385);
	do Memory.poke(memAddress +160, 16385);
	do Memory.poke(memAddress +192, 16385);
	do Memory.poke(memAddress +224, 16385);
	do Memory.poke(memAddress +256, 16385);
	do Memory.poke(memAddress +288, 16385);
	do Memory.poke(memAddress +320, 16385);
	do Memory.poke(memAddress +352, 16385);
	do Memory.poke(memAddress +384, 16385);
	do Memory.poke(memAddress +416, 16385);
	do Memory.poke(memAddress +448, 32767);
	return;
}



    function void drawSelected(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 32767);
	do Memory.poke(memAddress +32, 16385);
	do Memory.poke(memAddress +64, 24573);
	do Memory.poke(memAddress +96, 24573);
	do Memory.poke(memAddress +128, 24573);
	do Memory.poke(memAddress +160, 24573);
	do Memory.poke(memAddress +192, 24573);
	do Memory.poke(memAddress +224, 24573);
	do Memory.poke(memAddress +256, 24573);
	do Memory.poke(memAddress +288, 24573);
	do Memory.poke(memAddress +320, 24573);
	do Memory.poke(memAddress +352, 24573);
	do Memory.poke(memAddress +384, 24573);
	do Memory.poke(memAddress +416, 16385);
	do Memory.poke(memAddress +448, 32767);
	return;
}

function void drawBomb(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 32767);
	do Memory.poke(memAddress +32, 16385);
	do Memory.poke(memAddress +64, 17745);
	do Memory.poke(memAddress +96, 18889);
	do Memory.poke(memAddress +128, 18889);
	do Memory.poke(memAddress +160, 26611);
	do Memory.poke(memAddress +192, 21477);
	do Memory.poke(memAddress +224, 20473);
	do Memory.poke(memAddress +256, 18417);
	do Memory.poke(memAddress +288, 20473);
	do Memory.poke(memAddress +320, 22517);
	do Memory.poke(memAddress +352, 25571);
	do Memory.poke(memAddress +384, 17873);
	do Memory.poke(memAddress +416, 22541);
	do Memory.poke(memAddress +448, 32767);
	return;
}

function void drawZero(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 32767);
	do Memory.poke(memAddress +32, 16385);
	do Memory.poke(memAddress +64, 18417);
	do Memory.poke(memAddress +96, 20473);
	do Memory.poke(memAddress +128, 19481);
	do Memory.poke(memAddress +160, 19481);
	do Memory.poke(memAddress +192, 19481);
	do Memory.poke(memAddress +224, 19481);
	do Memory.poke(memAddress +256, 19481);
	do Memory.poke(memAddress +288, 19481);
	do Memory.poke(memAddress +320, 19481);
	do Memory.poke(memAddress +352, 20473);
	do Memory.poke(memAddress +384, 18417);
	do Memory.poke(memAddress +416, 16385);
	do Memory.poke(memAddress +448, 32767);
	return;
}

function void selectedZero(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -1);
	do Memory.poke(memAddress +32, 1);
	do Memory.poke(memAddress +64, 32765);
	do Memory.poke(memAddress +96, 28701);
	do Memory.poke(memAddress +128, 24589);
	do Memory.poke(memAddress +160, 26573);
	do Memory.poke(memAddress +192, 26573);
	do Memory.poke(memAddress +224, 26573);
	do Memory.poke(memAddress +256, 26573);
	do Memory.poke(memAddress +288, 26573);
	do Memory.poke(memAddress +320, 26573);
	do Memory.poke(memAddress +352, 26573);
	do Memory.poke(memAddress +384, 24589);
	do Memory.poke(memAddress +416, 28701);
	do Memory.poke(memAddress +448, 32765);
	do Memory.poke(memAddress +480, 1);
	return;
}

function void selectedOne(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -1);
	do Memory.poke(memAddress +32, 1);
	do Memory.poke(memAddress +64, 32765);
	do Memory.poke(memAddress +96, 31869);
	do Memory.poke(memAddress +128, 31805);
	do Memory.poke(memAddress +160, 31773);
	do Memory.poke(memAddress +192, 31773);
	do Memory.poke(memAddress +224, 31869);
	do Memory.poke(memAddress +256, 31869);
	do Memory.poke(memAddress +288, 31869);
	do Memory.poke(memAddress +320, 31869);
	do Memory.poke(memAddress +352, 31869);
	do Memory.poke(memAddress +384, 31869);
	do Memory.poke(memAddress +416, 31869);
	do Memory.poke(memAddress +448, 32765);
	do Memory.poke(memAddress +480, 1);
	return;
}

function void drawOne(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 32767);
	do Memory.poke(memAddress +32, 16385);
	do Memory.poke(memAddress +64, 16833);
	do Memory.poke(memAddress +96, 16865);
	do Memory.poke(memAddress +128, 16881);
	do Memory.poke(memAddress +160, 16881);
	do Memory.poke(memAddress +192, 16833);
	do Memory.poke(memAddress +224, 16833);
	do Memory.poke(memAddress +256, 16833);
	do Memory.poke(memAddress +288, 16833);
	do Memory.poke(memAddress +320, 16833);
	do Memory.poke(memAddress +352, 16833);
	do Memory.poke(memAddress +384, 16833);
	do Memory.poke(memAddress +416, 16385);
	do Memory.poke(memAddress +448, 32767);
	return;
}

function void drawTwo(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 32767);
	do Memory.poke(memAddress +32, 16385);
	do Memory.poke(memAddress +64, 18417);
	do Memory.poke(memAddress +96, 20473);
	do Memory.poke(memAddress +128, 23577);
	do Memory.poke(memAddress +160, 24065);
	do Memory.poke(memAddress +192, 20225);
	do Memory.poke(memAddress +224, 17281);
	do Memory.poke(memAddress +256, 16833);
	do Memory.poke(memAddress +288, 16609);
	do Memory.poke(memAddress +320, 16497);
	do Memory.poke(memAddress +352, 24569);
	do Memory.poke(memAddress +384, 24569);
	do Memory.poke(memAddress +416, 16385);
	do Memory.poke(memAddress +448, 32767);
	return;
}

function void selectedTwo(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -1);
	do Memory.poke(memAddress +32, 1);
	do Memory.poke(memAddress +64, 32765);
	do Memory.poke(memAddress +96, 28701);
	do Memory.poke(memAddress +128, 24589);
	do Memory.poke(memAddress +160, 18381);
	do Memory.poke(memAddress +192, 17405);
	do Memory.poke(memAddress +224, 25085);
	do Memory.poke(memAddress +256, 30973);
	do Memory.poke(memAddress +288, 31869);
	do Memory.poke(memAddress +320, 32317);
	do Memory.poke(memAddress +352, 32541);
	do Memory.poke(memAddress +384, 16397);
	do Memory.poke(memAddress +416, 16397);
	do Memory.poke(memAddress +448, 32765);
	do Memory.poke(memAddress +480, 1);
	return;
}

function void drawThree(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 32767);
	do Memory.poke(memAddress +32, 16385);
	do Memory.poke(memAddress +64, 18417);
	do Memory.poke(memAddress +96, 20473);
	do Memory.poke(memAddress +128, 19481);
	do Memory.poke(memAddress +160, 19457);
	do Memory.poke(memAddress +192, 20417);
	do Memory.poke(memAddress +224, 18369);
	do Memory.poke(memAddress +256, 19969);
	do Memory.poke(memAddress +288, 19457);
	do Memory.poke(memAddress +320, 19481);
	do Memory.poke(memAddress +352, 20473);
	do Memory.poke(memAddress +384, 18417);
	do Memory.poke(memAddress +416, 16385);
	do Memory.poke(memAddress +448, 32767);
	return;
}

function void selectedThree(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -1);
	do Memory.poke(memAddress +32, 1);
	do Memory.poke(memAddress +64, 32765);
	do Memory.poke(memAddress +96, 28701);
	do Memory.poke(memAddress +128, 24589);
	do Memory.poke(memAddress +160, 26573);
	do Memory.poke(memAddress +192, 26621);
	do Memory.poke(memAddress +224, 24701);
	do Memory.poke(memAddress +256, 28797);
	do Memory.poke(memAddress +288, 25597);
	do Memory.poke(memAddress +320, 26621);
	do Memory.poke(memAddress +352, 26573);
	do Memory.poke(memAddress +384, 24589);
	do Memory.poke(memAddress +416, 28701);
	do Memory.poke(memAddress +448, 32765);
	do Memory.poke(memAddress +480, 1);
	return;
}




function void drawFour(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 32767);
	do Memory.poke(memAddress +32, 16385);
	do Memory.poke(memAddress +64, 18305);
	do Memory.poke(memAddress +96, 18369);
	do Memory.poke(memAddress +128, 18145);
	do Memory.poke(memAddress +160, 18033);
	do Memory.poke(memAddress +192, 17977);
	do Memory.poke(memAddress +224, 18425);
	do Memory.poke(memAddress +256, 18425);
	do Memory.poke(memAddress +288, 18177);
	do Memory.poke(memAddress +320, 18177);
	do Memory.poke(memAddress +352, 18177);
	do Memory.poke(memAddress +384, 18177);
	do Memory.poke(memAddress +416, 16385);
	do Memory.poke(memAddress +448, 32767);
	return;
}

function void selectedFour(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -1);
	do Memory.poke(memAddress +32, 1);
	do Memory.poke(memAddress +64, 32765);
	do Memory.poke(memAddress +96, 28925);
	do Memory.poke(memAddress +128, 28797);
	do Memory.poke(memAddress +160, 29245);
	do Memory.poke(memAddress +192, 29469);
	do Memory.poke(memAddress +224, 29581);
	do Memory.poke(memAddress +256, 28685);
	do Memory.poke(memAddress +288, 28685);
	do Memory.poke(memAddress +320, 29181);
	do Memory.poke(memAddress +352, 29181);
	do Memory.poke(memAddress +384, 29181);
	do Memory.poke(memAddress +416, 29181);
	do Memory.poke(memAddress +448, 32765);
	do Memory.poke(memAddress +480, 1);
	return;
}

function void selectedFive(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -1);
	do Memory.poke(memAddress +32, 1);
	do Memory.poke(memAddress +64, 32765);
	do Memory.poke(memAddress +96, 24589);
	do Memory.poke(memAddress +128, 24589);
	do Memory.poke(memAddress +160, 32717);
	do Memory.poke(memAddress +192, 32717);
	do Memory.poke(memAddress +224, 28685);
	do Memory.poke(memAddress +256, 24589);
	do Memory.poke(memAddress +288, 26621);
	do Memory.poke(memAddress +320, 26621);
	do Memory.poke(memAddress +352, 26573);
	do Memory.poke(memAddress +384, 24589);
	do Memory.poke(memAddress +416, 28701);
	do Memory.poke(memAddress +448, 32765);
	do Memory.poke(memAddress +480, 1);
	return;
}

function void drawFive(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 32767);
	do Memory.poke(memAddress +32, 16385);
	do Memory.poke(memAddress +64, 20473);
	do Memory.poke(memAddress +96, 20473);
	do Memory.poke(memAddress +128, 16409);
	do Memory.poke(memAddress +160, 16409);
	do Memory.poke(memAddress +192, 18425);
	do Memory.poke(memAddress +224, 20473);
	do Memory.poke(memAddress +256, 19457);
	do Memory.poke(memAddress +288, 19457);
	do Memory.poke(memAddress +320, 19481);
	do Memory.poke(memAddress +352, 20473);
	do Memory.poke(memAddress +384, 18417);
	do Memory.poke(memAddress +416, 16385);
	do Memory.poke(memAddress +448, 32767);
	return;
}


function void drawSix(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 32767);
	do Memory.poke(memAddress +32, 16385);
	do Memory.poke(memAddress +64, 18417);
	do Memory.poke(memAddress +96, 20473);
	do Memory.poke(memAddress +128, 19481);
	do Memory.poke(memAddress +160, 19481);
	do Memory.poke(memAddress +192, 16409);
	do Memory.poke(memAddress +224, 18425);
	do Memory.poke(memAddress +256, 20473);
	do Memory.poke(memAddress +288, 19481);
	do Memory.poke(memAddress +320, 19481);
	do Memory.poke(memAddress +352, 20473);
	do Memory.poke(memAddress +384, 18417);
	do Memory.poke(memAddress +416, 16385);
	do Memory.poke(memAddress +448, 32767);
	return;
}

function void selectedSix(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -1);
	do Memory.poke(memAddress +32, 1);
	do Memory.poke(memAddress +64, 32765);
	do Memory.poke(memAddress +96, 28701);
	do Memory.poke(memAddress +128, 24589);
	do Memory.poke(memAddress +160, 26573);
	do Memory.poke(memAddress +192, 26573);
	do Memory.poke(memAddress +224, 32717);
	do Memory.poke(memAddress +256, 28685);
	do Memory.poke(memAddress +288, 24589);
	do Memory.poke(memAddress +320, 26573);
	do Memory.poke(memAddress +352, 26573);
	do Memory.poke(memAddress +384, 24589);
	do Memory.poke(memAddress +416, 28701);
	do Memory.poke(memAddress +448, 32765);
	do Memory.poke(memAddress +480, 1);
	return;
}

function void drawSeven(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 32767);
	do Memory.poke(memAddress +32, 16385);
	do Memory.poke(memAddress +64, 20477);
	do Memory.poke(memAddress +96, 20477);
	do Memory.poke(memAddress +128, 19981);
	do Memory.poke(memAddress +160, 20225);
	do Memory.poke(memAddress +192, 18305);
	do Memory.poke(memAddress +224, 17345);
	do Memory.poke(memAddress +256, 16833);
	do Memory.poke(memAddress +288, 16609);
	do Memory.poke(memAddress +320, 16609);
	do Memory.poke(memAddress +352, 16609);
	do Memory.poke(memAddress +384, 16609);
	do Memory.poke(memAddress +416, 16385);
	do Memory.poke(memAddress +448, 32767);
	return;
}

function void selectedSeven(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -1);
	do Memory.poke(memAddress +32, 1);
	do Memory.poke(memAddress +64, 32765);
	do Memory.poke(memAddress +96, 24581);
	do Memory.poke(memAddress +128, 24581);
	do Memory.poke(memAddress +160, 25573);
	do Memory.poke(memAddress +192, 25085);
	do Memory.poke(memAddress +224, 28925);
	do Memory.poke(memAddress +256, 30845);
	do Memory.poke(memAddress +288, 31869);
	do Memory.poke(memAddress +320, 32317);
	do Memory.poke(memAddress +352, 32317);
	do Memory.poke(memAddress +384, 32317);
	do Memory.poke(memAddress +416, 32317);
	do Memory.poke(memAddress +448, 32765);
	do Memory.poke(memAddress +480, 1);
	return;
}

function void drawEight(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 32767);
	do Memory.poke(memAddress +32, 16385);
	do Memory.poke(memAddress +64, 18417);
	do Memory.poke(memAddress +96, 20473);
	do Memory.poke(memAddress +128, 19481);
	do Memory.poke(memAddress +160, 19481);
	do Memory.poke(memAddress +192, 20473);
	do Memory.poke(memAddress +224, 18417);
	do Memory.poke(memAddress +256, 20025);
	do Memory.poke(memAddress +288, 19481);
	do Memory.poke(memAddress +320, 19481);
	do Memory.poke(memAddress +352, 20473);
	do Memory.poke(memAddress +384, 18417);
	do Memory.poke(memAddress +416, 16385);
	do Memory.poke(memAddress +448, 32767);
	return;
}

function void selectedEight(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -1);
	do Memory.poke(memAddress +32, 1);
	do Memory.poke(memAddress +64, 32765);
	do Memory.poke(memAddress +96, 28701);
	do Memory.poke(memAddress +128, 24589);
	do Memory.poke(memAddress +160, 26573);
	do Memory.poke(memAddress +192, 26573);
	do Memory.poke(memAddress +224, 24589);
	do Memory.poke(memAddress +256, 28701);
	do Memory.poke(memAddress +288, 25485);
	do Memory.poke(memAddress +320, 26573);
	do Memory.poke(memAddress +352, 26573);
	do Memory.poke(memAddress +384, 24589);
	do Memory.poke(memAddress +416, 28701);
	do Memory.poke(memAddress +448, 32765);
	do Memory.poke(memAddress +480, 1);
	return;
}


function void drawFlag(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 32767);
	do Memory.poke(memAddress +32, 16385);
	do Memory.poke(memAddress +64, 16481);
	do Memory.poke(memAddress +96, 16545);
	do Memory.poke(memAddress +128, 16673);
	do Memory.poke(memAddress +160, 16929);
	do Memory.poke(memAddress +192, 17441);
	do Memory.poke(memAddress +224, 16929);
	do Memory.poke(memAddress +256, 16673);
	do Memory.poke(memAddress +288, 16545);
	do Memory.poke(memAddress +320, 16481);
	do Memory.poke(memAddress +352, 16417);
	do Memory.poke(memAddress +384, 16889);
	do Memory.poke(memAddress +416, 16385);
	do Memory.poke(memAddress +448, 32767);
	return;
}

function void SelectedFlag(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -1);
	do Memory.poke(memAddress +32, 1);
	do Memory.poke(memAddress +64, 32765);
	do Memory.poke(memAddress +96, 32573);
	do Memory.poke(memAddress +128, 32445);
	do Memory.poke(memAddress +160, 32189);
	do Memory.poke(memAddress +192, 31677);
	do Memory.poke(memAddress +224, 30653);
	do Memory.poke(memAddress +256, 31677);
	do Memory.poke(memAddress +288, 32189);
	do Memory.poke(memAddress +320, 32445);
	do Memory.poke(memAddress +352, 32573);
	do Memory.poke(memAddress +384, 32701);
	do Memory.poke(memAddress +416, 31757);
	do Memory.poke(memAddress +448, 32765);
	do Memory.poke(memAddress +480, 1);
	return;
}

function void drawGameOver(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 1016);
	do Memory.poke(memAddress +32, 2044);
	do Memory.poke(memAddress +64, 3102);
	do Memory.poke(memAddress +96, 14);
	do Memory.poke(memAddress +128, -16377);
	do Memory.poke(memAddress +160, -8185);
	do Memory.poke(memAddress +192, 24583);
	do Memory.poke(memAddress +224, 26503);
	do Memory.poke(memAddress +256, 26126);
	do Memory.poke(memAddress +288, 26126);
	do Memory.poke(memAddress +320, 26140);
	do Memory.poke(memAddress +352, -6152);
	do Memory.poke(memAddress +384, -14368);
	do Memory.poke(memAddress +480, 508);
	do Memory.poke(memAddress +512, 1022);
	do Memory.poke(memAddress +544, 1543);
	do Memory.poke(memAddress +576, 1539);
	do Memory.poke(memAddress +608, 1539);
	do Memory.poke(memAddress +640, 1539);
	do Memory.poke(memAddress +672, 13827);
	do Memory.poke(memAddress +704, 13827);
	do Memory.poke(memAddress +736, 13831);
	do Memory.poke(memAddress +768, -18930);
	do Memory.poke(memAddress +800, -3314);
	do Memory.poke(memAddress +832, 29692);
	do Memory.poke(memAddress +864, 29176);
	// column 1
	do Memory.poke(memAddress +97, -12608);
	do Memory.poke(memAddress +129, -17);
	do Memory.poke(memAddress +161, -17521);
	do Memory.poke(memAddress +193, -26228);
	do Memory.poke(memAddress +225, -26228);
	do Memory.poke(memAddress +257, -26228);
	do Memory.poke(memAddress +289, -26228);
	do Memory.poke(memAddress +321, -26228);
	do Memory.poke(memAddress +353, -26145);
	do Memory.poke(memAddress +385, -26405);
	do Memory.poke(memAddress +641, -23616);
	do Memory.poke(memAddress +673, -6164);
	do Memory.poke(memAddress +705, -6538);
	do Memory.poke(memAddress +737, 26611);
	do Memory.poke(memAddress +769, 24625);
	do Memory.poke(memAddress +801, 24672);
	do Memory.poke(memAddress +833, 26592);
	do Memory.poke(memAddress +865, 25472);
	// column 2
	do Memory.poke(memAddress +66, 504);
	do Memory.poke(memAddress +98, 509);
	do Memory.poke(memAddress +130, 397);
	do Memory.poke(memAddress +162, 397);
	do Memory.poke(memAddress +194, 509);
	do Memory.poke(memAddress +226, 13);
	do Memory.poke(memAddress +258, 13);
	do Memory.poke(memAddress +290, 13);
	do Memory.poke(memAddress +322, 397);
	do Memory.poke(memAddress +354, 253);
	do Memory.poke(memAddress +386, 121);
	do Memory.poke(memAddress +450, 384);
	do Memory.poke(memAddress +482, 384);
	do Memory.poke(memAddress +514, 384);
	do Memory.poke(memAddress +546, 384);
	do Memory.poke(memAddress +578, 384);
	do Memory.poke(memAddress +610, 384);
	do Memory.poke(memAddress +642, 399);
	do Memory.poke(memAddress +674, 415);
	do Memory.poke(memAddress +706, 408);
	do Memory.poke(memAddress +738, 384);
	do Memory.poke(memAddress +770, 384);
	do Memory.poke(memAddress +834, 384);
	do Memory.poke(memAddress +866, 384);
	return;
}
    

}