// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Mux8Way16.hdl
/**
 * 8-way 16-bit multiplexor:
 * out = a if sel = 000
 *       b if sel = 001
 *       c if sel = 010
 *       d if sel = 011
 *       e if sel = 100
 *       f if sel = 101
 *       g if sel = 110
 *       h if sel = 111
 */
CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
      Mux4Way16(a=a , b=b , c= c, d=d , sel=sel[0..1] , out= aToD );
      Mux4Way16(a=e , b=f , c= g, d=h , sel=sel[0..1] , out= eToH );
      Not16(in[0]= sel[2],
            in[1]= sel[2],
            in[2]= sel[2],
            in[3]= sel[2],
            in[4]= sel[2],
            in[5]= sel[2],
            in[6]= sel[2],
            in[7]= sel[2],
            in[8]= sel[2],
            in[9]= sel[2],
            in[10]= sel[2],
            in[11]= sel[2],
            in[12]= sel[2],
            in[13]= sel[2],
            in[14]= sel[2],
            in[15]= sel[2] , out= notSel2 );

      And16(a= aToD, b=notSel2 , out= aToD2);

      And16(a[0]= sel[2],
            a[1]= sel[2],
            a[2]= sel[2],
            a[3]= sel[2],
            a[4]= sel[2],
            a[5]= sel[2],
            a[6]= sel[2],
            a[7]= sel[2],
            a[8]= sel[2],
            a[9]= sel[2],
            a[10]= sel[2],
            a[11]= sel[2],
            a[12]= sel[2],
            a[13]= sel[2],
            a[14]= sel[2],
            a[15]= sel[2] , b= eToH, out=eToH2 );

      Or16(a= aToD2, b=eToH2 , out=out );
    //// Replace this comment with your code.

}